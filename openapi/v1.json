{
  "openapi": "3.0.0",
  "info": {
    "title": ":project_name",
    "version": "1.0",
    "contact": {
      "name": "3 Sided Cube",
      "url": "https://3sidedcube.com",
      "email": "server@3sidedcube.com"
    },
    "description": "### About\n\nThe Open API documentation for the :project_name API."
  },
  "servers": [
    {
      "url": ":server_url/v1"
    }
  ],
  "paths": {
    "/co2/travel": {
        "get": {
            "summary": "Get CO2 emissions for travel",
            "description": "Returns the total carbon footprint of travel mileage of different types.",
            "parameters": [],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "car": {
                                    "type": "number",
                                    "description": "The distance travelled by car in miles."
                                },
                                "train": {
                                    "type": "number",
                                    "description": "The distance travelled by train in miles."
                                },
                                "bus": {
                                    "type": "number",
                                    "description": "The distance travelled by bus in miles."
                                },
                                "plane": {
                                    "type": "number",
                                    "description": "The distance travelled by plane in miles."
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK"
                }
            }
        }
    },
    "/co2/household": {
        "get": {
            "summary": "Get CO2 emissions for a household (in a given year)",
            "description": "Returns the total carbon footprint of a household in a given year.",
            "parameters": [],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "occupants": {
                                    "type": "number",
                                    "description": "The number of occupants in the household."
                                },
                                "energy_usage": {
                                    "type": "number",
                                    "description": "The amount of electricity used in the household in kWh (average over a year). Leave blank for UK average to be used."
                                },
                                "gas_usage": {
                                    "type": "number",
                                    "description": "The amount of gas used in the household in kWh (average over a year). Leave blank for UK average to be used."
                                },
                                "number_of_cars": {
                                    "type": "number",
                                    "description": "The number of cars in the household."
                                },

                            },
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK"
                }
            }
        }
    },
    "/co2/food": {
        "get": {
            "summary": "Get CO2 emissions based on your food consumption (in a given year)",
            "description": "Returns the total carbon impact of your food consumption in a given year.",
            "parameters": [],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "organic_food_amount": {
                                    "type": "number",
                                    "description": "How much organic food you eat in a year. Number between 1 and 4 - (1 = 0%, 2 = 33%, 3 = 66%, 4 = 100%)."
                                },
                                "meat_dairy_amount": {
                                    "type": "number",
                                    "description": "How much meat and dairy you eat in a year. Number between 1 and 4 - (1 = 0%, 2 = 33%, 3 = 66%, 4 = 100%)."
                                },
                                "locally_produced_amount": {
                                    "type": "number",
                                    "description": "How much of your food is produced locally. Number between 1 and 4 - (1 = 0%, 2 = 33%, 3 = 66%, 4 = 100%)."
                                },
                                "waste_amount": {
                                    "type": "number",
                                    "description": "How much food you waste in a year. Number between 1 and 4 - (1 = 0%, 2 = 33%, 3 = 66%, 4 = 100%)."
                                },
                            },
                            "required": [
                                "distance"
                            ]
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK"
                }
            }
        }
    }
  },
  "components": {
    "schemas": {
      "ValidationError": {
        "title": "ValidationError",
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "example": "name",
            "description": "The parameter that failed the validation."
          },
          "code": {
            "type": "string",
            "example": "REQUIRED",
            "description": "The rule that failed."
          },
          "message": {
            "type": "string",
            "example": "The name field is required.",
            "description": "A human readable validation error message."
          }
        },
        "required": [
          "parameter",
          "code",
          "message"
        ]
      }
    },
    "responses": {
      "ApiErrorResponse": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "unauthenticated",
                      "description": "The unique error code."
                    },
                    "message": {
                      "type": "string",
                      "example": "User not authenticated.",
                      "description": "A human readable error message."
                    }
                  }
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "ValidationErrorResponse": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "required": [
                    "code",
                    "message",
                    "validation_errors"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "validation_error",
                      "description": "The unique error code."
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation failed.",
                      "description": "A human readable error message."
                    },
                    "validation_errors": {
                      "type": "array",
                      "description": "The validation errors.",
                      "items": {
                        "$ref": "#/components/schemas/ValidationError"
                      }
                    }
                  }
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      }
    }
  }
}
